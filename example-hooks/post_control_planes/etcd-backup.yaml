- name: Install etcd-backup
  run_once: true
  delegate_to: "{{ first_kube_control_plane }}"
  block:
  - name: Check for the etcd-backup cronjob
    ansible.builtin.shell:
      cmd: |
        kubectl get cronjob -n kube-system etcd-backup --kubeconfig /etc/kubernetes/admin.conf > /dev/null 2> /dev/null || echo "Not installed"
        echo "Installed"
    register: etcd_backup_installed_cmd

  - name: Set install_etcd_backup fact
    ansible.builtin.set_fact:
      install_etcd_backup: "{{ etcd_backup_installed_cmd.stdout_lines[0] == 'Not installed' }}"

  - name: etcd-backup cronjob
    ansible.builtin.copy:
      content: |
        apiVersion: batch/v1
        kind: CronJob
        metadata:
          name: etcd-backup
          namespace: kube-system
        spec:
          schedule: "0 0 * * *"
          jobTemplate:
            spec:
              template:
                spec:
                  hostNetwork: true
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: ""
                  tolerations:
                  - key: node-role.kubernetes.io/control-plane
                    effect: NoSchedule
                  restartPolicy: Never
                  containers:
                  - name: etcd-backup
                    securityContext:
                      runAsUser: 0
                    image: bitnami/etcd:3.5.16
                    command:
                    - sh
                    - -c
                    - etcdctl snapshot save /var/lib/etcd/snapshots/snap-$(date +%Y%m%d-%H%M%S).db --cert /etc/kubernetes/pki/etcd/peer.crt --key /etc/kubernetes/pki/etcd/peer.key --endpoints https://127.0.0.1:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt
                    volumeMounts:
                    - mountPath: /var/lib/etcd/snapshots
                      name: etcd-snapshots
                    - mountPath: /etc/kubernetes/pki/etcd
                      name: etcd-certs
                  volumes:
                  # TODO: make this an nfs share or someplace other than the local host
                  - name: etcd-snapshots
                    hostPath:
                      path: /var/lib/etcd/snapshots
                      type: DirectoryOrCreate
                  - name: etcd-certs
                    hostPath:
                      path: /etc/kubernetes/pki/etcd
                      type: DirectoryOrCreate
      dest: "{{ kubernetes_config_directory }}/etcd-backup-cronjob.yaml"
      owner: root
      group: root
      mode: '0600'

  - name: Apply etcd-backup cronjob
    ansible.builtin.command: kubectl apply -f {{ kubernetes_config_directory }}/etcd-backup-cronjob.yaml --kubeconfig /etc/kubernetes/admin.conf
    register: etcd_backup_cronjob
    when: install_etcd_backup
    changed_when: etcd_backup_cronjob.rc != 0
    failed_when: etcd_backup_cronjob.rc != 0
    ignore_errors: true

  rescue:
  - name: Output etcd_backup
    when: etcd_backup_cronjob is defined
    ansible.builtin.debug:
      msg: "{{ etcd_backup }}"

  - name: Etcd backup failed to install
    ansible.builtin.fail:
      msg: Etcd backup failed to install
