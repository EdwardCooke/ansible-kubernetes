- name: Cluster roles
  delegate_to: "{{ first_kube_control_plane }}"
  run_once: true
  block:
  - name: Check for oidc cluster roles
    ansible.builtin.shell:
      cmd: |
        kubectl get clusterrolebinding --kubeconfig /etc/kubernetes/admin.conf | grep oidc > /dev/null && echo -n "Installed" || echo -n "Not installed"
    register: clusterroles_installed_cmd

  - name: Set install_clusterroles fact
    ansible.builtin.set_fact:
      install_clusterroles: "{{ clusterroles_installed_cmd.stdout_lines[0] == 'Not installed' }}"

  - name: Set cluster role fact
    when: install_clusterroles
    ansible.builtin.set_fact:
      cluster_role_files:
      - {src: admin-clusterrolebinding.yaml, dest: "{{ kubernetes_config_directory }}/admin-clusterrolebinding.yaml"}

  - name: Copy cluster role files
    loop_control:
      loop_var: i
    when: install_clusterroles
    with_items: "{{ cluster_role_files }}"
    ansible.builtin.copy:
      src: "{{ i.src }}"
      dest: "{{ i.dest }}"
      owner: root
      group: root
      mode: '0600'

  - name: Create roles and role bindings
    loop_control:
      loop_var: i
    register: rolebindings
    when: install_clusterroles
    with_items: "{{ cluster_role_files }}"
    ansible.builtin.shell:
      cmd: |
        kubectl apply -f {{ i.dest }} --kubeconfig /etc/kubernetes/admin.conf

  rescue:
  - name: Write rolebindings init output to stdout
    ansible.builtin.debug:
      msg: |
        {{ rolebindings }}
    when: rolebindings is defined

  - name: Fail the task
    ansible.builtin.fail:
      msg: Failed to create cluster role binding for oidc users
