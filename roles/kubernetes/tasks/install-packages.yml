- name: Install packages
  block:
  - name: Kubernetes - Download GPG keyring
    ansible.builtin.get_url:
      url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key
      dest: /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}
      mode: '0644'
      owner: root
      group: root

  - name: Add an apt signing key for Kubernetes
    ansible.builtin.command: gpg --batch --yes --dearmor /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}
    args:
      creates: /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}.gpg

  - name: Set GPG keyring permissions
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}.gpg
      state: file
      mode: '0644'
      owner: root
      group: root

  - name: Adding apt repository for Kubernetes
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/kubernetes-{{ kubernetes_version }}.gpg] {{ kubernetes_mirror }} /
      state: present
      filename: kubernetes-{{ kubernetes_version }}.list

  - name: Get latest specified version of kubeadm, kubelet and kubectl
    ansible.builtin.shell:
      cmd: |
        set -eo pipefail
        apt-cache madison kubeadm | grep "{{ kubernetes_version }}" | head -n 1 | awk '{print $3}'
      executable: /bin/bash
    register: k8s_version_temp
    changed_when: k8s_version_temp.rc != 0

  - name: Set k8s_version fact
    ansible.builtin.set_fact:
      k8s_version: "{{ k8s_version_temp.stdout }}"

  - name: Install kubeadm, kubelet, kubectl and nfs-common
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
      - kubeadm={{ k8s_version }}
      - kubelet={{ k8s_version }}
      - kubectl={{ k8s_version }}
      - nfs-common
    when: ansible_facts.os_family == "Debian"

  - name: Hold kubeadm, kubelet and kubectl
    ansible.builtin.dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
    - kubeadm
    - kubelet
    - kubectl

  - name: Start kubelet
    ansible.builtin.service:
      name: kubelet
      state: started
      enabled: true

  rescue:

  - name: Unhold kubeadm, kubelet and kubectl
    ansible.builtin.dpkg_selections:
      name: "{{ item }}"
      selection: install
    with_items:
    - kubeadm
    - kubelet
    - kubectl

  - name: Remove Kubernetes packages
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
      - kubeadm
      - kubelet
      - kubectl

  - name: Remove Kubernetes apt repository
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/kubernetes-{{ kubernetes_version }}.gpg] {{ kubernetes_mirror }} /
      state: absent
      filename: kubernetes-{{ kubernetes_version }}.list

  - name: Remove gpg key
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}.gpg
      state: absent

  - name: Remove armored gpg key
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-{{ kubernetes_version }}
      state: absent

  - name: Fail install packages
    ansible.builtin.fail:
      msg: "Failed to install packages"
