- name: Update apt repositories
  ansible.builtin.apt:
    update_cache: true

- name: Make sure the gpg package is installed
  ansible.builtin.apt:
    name:
    - gpg
    state: present

- name: Create keyring directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Download GPG keyring
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker
    mode: '0644'
    owner: root
    group: root

- name: Dearmor gpg keyring
  ansible.builtin.command: gpg --batch --yes --dearmor /etc/apt/keyrings/docker
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Set GPG keyring permissions
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    state: file
    mode: '0644'
    owner: root
    group: root

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] {{ containerd_mirror }} {{ ansible_distribution_release | lower }} stable
    state: present
    update_cache: true
    filename: docker

- name: Install Container-d
  ansible.builtin.apt:
    name:
    - containerd.io
    state: present

- name: Set containerd systemd cgroup
  block:
  - name: Set containerd systemd cgroup
    ansible.builtin.shell:
      cmd: |
        set -eo pipefail
        containerd config default | sed "s/SystemdCgroup = false/SystemdCgroup = true/" > /etc/containerd/config.toml
      executable: /bin/bash
      creates: /etc/containerd/config.toml
    register: containerd_configured
    notify: Restart containerd service

  - name: Add containerd default credentials
    with_items: "{{ containerd_credentials }}"
    ansible.builtin.lineinfile:
      dest: /etc/containerd/config.toml
      insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\.configs\]'
      line: >2
                [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ item.registry }}".auth]
                  username = "{{ item.username }}"
                  password = "{{ item.password | b64encode }}"
    notify: Restart containerd service
    no_log: true

  - name: Remove disabled plugins
    ansible.builtin.lineinfile:
      dest: /etc/containerd/config.toml
      regexp: 'disabled_plugins = \[.*\]'
      state: absent
    notify: Restart containerd service

  - name: Set permissions to 0600 on /etc/containerd/config.toml
    ansible.builtin.file:
      mode: '0600'
      dest: /etc/containerd/config.toml
    notify: Restart containerd service

  rescue:
  - name: Output containerd_configured
    ansible.builtin.debug:
      msg: |
        {{ containerd_configured.stdout_lines }}
        {{ containerd_configured.stderr_lines }}
    when: containerd_configured.stdout_lines is defined

  - name: Remove containerd systemd cgroup
    ansible.builtin.file:
      state: absent
      path: "{{ item }}"
    with_items:
    - "{{ kubernetes_output_directory }}/containerd-configured"
    - /etc/containerd/config.toml

  - name: Fail containerd systemd cgroup
    ansible.builtin.fail:
      msg: "Failed to set containerd systemd cgroup"

  - name: Flush handlers
    ansible.builtin.meta: flush_handlers
