- name: Update apt repositories
  ansible.builtin.apt:
    update_cache: true

- name: Make sure the gpg package is installed
  ansible.builtin.apt:
    name:
    - gpg
    state: present

- name: Create keyring directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Download GPG keyring
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker
    mode: '0644'
    owner: root
    group: root

- name: Dearmor gpg keyring
  ansible.builtin.command: gpg --batch --yes --dearmor /etc/apt/keyrings/docker
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Set GPG keyring permissions
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    state: file
    mode: '0644'
    owner: root
    group: root

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/docker.gpg] {{ containerd_mirror }} {{ ansible_distribution_release | lower }} stable
    state: present
    update_cache: true
    filename: docker

- name: Install Container-d
  ansible.builtin.apt:
    name:
    - containerd.io
    state: present

- name: Get package facts
  become: true
  ansible.builtin.package_facts:

- name: Set containerd systemd cgroup
  block:
  - name: Set containerd systemd cgroup
    ansible.builtin.shell:
      cmd: |
        set -eo pipefail
        containerd config default | sed "s/SystemdCgroup = false/SystemdCgroup = true/" > /etc/containerd/config.toml
      executable: /bin/bash
    register: containerd_configured
    changed_when: true
    notify: Restart containerd service

  - name: Add containerd default credentials
    with_items: "{{ containerd_credentials }}"
    when:
    - 'ansible_facts.packages["containerd.io"][0].version is version("2.0.0", "lt")'
    ansible.builtin.blockinfile:
      dest: /etc/containerd/config.toml
      insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\.configs\]'
      block: >2
                [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ item.registry }}".auth]
                  username = "{{ item.username }}"
                  password = "{{ item.password }}"
      validate: containerd --config "%s" config dump
      marker: "# {mark} ANSIBLE MANAGED CREDENTIAL {{ item.registry }}"
    notify: Restart containerd service
    no_log: true

  - name: Add containerd default credentials
    with_items: "{{ containerd_credentials }}"
    when:
    - 'ansible_facts.packages["containerd.io"][0].version is version("2.0.0", "ge")'
    ansible.builtin.blockinfile:
      dest: /etc/containerd/config.toml
      insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\.configs\]'
      block: >2
                [plugins."io.containerd.cri.v1.images".registry.configs."{{ item.registry }}".auth]
                  username = "{{ item.username }}"
                  password = "{{ item.password }}"
      validate: containerd --config "%s" config dump
      marker: "# {mark} ANSIBLE MANAGED CREDENTIAL {{ item.registry }}"
    notify: Restart containerd service
    no_log: true

  # https://github.com/containerd/containerd/blob/main/docs/cri/registry.md
  - name: Add registry mirrors
    loop: "{{ containerd_registry_mirrors }}"
    loop_control:
      label: "{{ registry_mirror.registry }}"
      loop_var: registry_mirror
    notify: Restart containerd service
    when:
    - containerd_registry_mirrors is defined
    - 'ansible_facts.packages["containerd.io"][0].version is version("2.0.0", "lt")'
    ansible.builtin.blockinfile:
      block: >2
                [plugins."io.containerd.grpc.v1.cri".registry.mirrors."{{ registry_mirror.registry }}"]
                  endpoint  = {{ registry_mirror.endpoints | to_json }}
      dest: /etc/containerd/config.toml
      insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\.mirrors\]'
      marker: "# {mark} ANSIBLE MANAGED MIRROR {{ registry_mirror.registry }}"
      validate: containerd --config "%s" config dump

  # https://github.com/containerd/containerd/blob/main/docs/cri/registry.md
  - name: Add registry mirrors
    loop: "{{ containerd_registry_mirrors }}"
    loop_control:
      label: "{{ registry_mirror.registry }}"
      loop_var: registry_mirror
    notify: Restart containerd service
    when:
    - containerd_registry_mirrors is defined
    - 'ansible_facts.packages["containerd.io"][0].version is version("2.0.0", "ge")'
    ansible.builtin.blockinfile:
      block: >2
                [plugins."io.containerd.cri.v1.images".registry.mirrors."{{ registry_mirror.registry }}"]
                  endpoint  = {{ registry_mirror.endpoints | to_json }}
      dest: /etc/containerd/config.toml
      insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\.mirrors\]'
      marker: "# {mark} ANSIBLE MANAGED MIRROR {{ registry_mirror.registry }}"
      validate: containerd --config "%s" config dump

  - name: Remove disabled plugins
    ansible.builtin.lineinfile:
      dest: /etc/containerd/config.toml
      regexp: 'disabled_plugins = \[.*\]'
      state: absent
    notify: Restart containerd service

  - name: Set permissions to 0600 on /etc/containerd/config.toml
    ansible.builtin.file:
      dest: /etc/containerd/config.toml
      mode: '0600'
    notify: Restart containerd service

  - name: Ensure containerd is enabled and started
    ansible.builtin.systemd:
      enabled: true
      name: containerd
      state: started
    notify: Restart containerd service

  rescue:
  - name: Output containerd_configured
    ansible.builtin.debug:
      msg: |
        {{ containerd_configured.stdout_lines }}
        {{ containerd_configured.stderr_lines }}
    when: containerd_configured.stdout_lines is defined

  - name: Remove containerd systemd cgroup
    ansible.builtin.file:
      state: absent
      path: "{{ item }}"
    with_items:
    - "{{ kubernetes_output_directory }}/containerd-configured"
    - /etc/containerd/config.toml

  - name: Fail containerd systemd cgroup
    ansible.builtin.fail:
      msg: "Failed to set containerd systemd cgroup"

  - name: Flush handlers
    ansible.builtin.meta: flush_handlers
