- name: Cleanup
  become: true
  hosts: kubernetes
  serial: 100
  tasks:

  - name: Reset kubeadm
    changed_when: true
    failed_when: false
    ansible.builtin.command:
      cmd: kubeadm reset -f

  - name: Stop systemd units
    failed_when: false
    loop:
    - k8s-certs-renew.timer
    - kubelet.service
    loop_control:
      loop_var: unit
    ansible.builtin.systemd_service:
      enabled: false
      name: "{{ unit }}"
      state: stopped

  - name: Remove containerd containers
    failed_when: false
    ansible.builtin.shell:
      cmd: |
        set -o pipefail
        ctr --namespace k8s.io containers ls -q | xargs -r ctr --namespace k8s.io containers rm
      executable: /bin/bash
    changed_when: true

  - name: Stop containerd
    failed_when: false
    loop:
    - containerd.service
    loop_control:
      loop_var: unit
    ansible.builtin.systemd_service:
      enabled: false
      name: "{{ unit }}"
      state: stopped

  - name: Uninstall packages
    failed_when: false
    # The order matters. Do not sort the list
    loop:
    - containerd.io
    - cri-tools
    - helm
    - kubeadm
    - kubectl
    - kubelet
    - conntrack
    - kubernetes-cni
    loop_control:
      loop_var: package
    ansible.builtin.apt:
      allow_change_held_packages: true
      name: "{{ package }}"
      state: absent

  - name: Reboot
    ansible.builtin.reboot:
      connect_timeout: 300
      msg: Rebooting to complete package cleanup
      reboot_timeout: 300

  - name: Remove files and directories
    failed_when: false
    loop:
    - /etc/apt/keyrings/docker
    - /etc/apt/keyrings/docker.gpg
    - /etc/apt/keyrings/helm
    - /etc/apt/keyrings/helm.gpg
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/sources.list.d/helm.list
    - /etc/apt/sources.list.d/kubernetes.list
    - /etc/cni
    - /etc/containerd
    - /etc/default/kubelet
    - /etc/kubernetes
    - /etc/sysctl.d/99-kubernetes-cri.conf
    - /etc/systemd/system/k8s-certs-renew.service
    - /etc/systemd/system/k8s-certs-renew.timer
    - /opt/cni
    - /opt/containerd
    - /opt/kubernetes
    - /root/.kube
    - /usr/local/bin/kustomize
    - /var/lib/containerd
    - /var/lib/etcd
    - /var/log/apiserver
    - /var/log/containers
    - /var/log/pods
    - /var/run/containerd
    loop_control:
      loop_var: file
    ansible.builtin.file:
      path: "{{ file }}"
      state: absent

  - name: Daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: Find versioned files
    register: kubernetes_files
    ansible.builtin.find:
      paths:
      - /etc/apt/keyrings
      patterns:
      - kubernetes*

  - name: Remove versioned files
    loop: "{{ kubernetes_files.files }}"
    loop_control:
      label: "{{ file.path }}"
      loop_var: file
    ansible.builtin.file:
      path: "{{ file.path }}"
      state: absent

  - name: Delete users
    loop:
    - etcd
    loop_control:
      loop_var: user
    ansible.builtin.user:
      name: "{{ user }}"
      state: absent

  - name: Delete groups
    loop:
    - etcd
    loop_control:
      loop_var: group
    ansible.builtin.group:
      name: "{{ group }}"
      state: absent

  - name: Reboot
    ansible.builtin.reboot:
      connect_timeout: 300
      msg: Rebooting to complete cleanup
      reboot_timeout: 300
